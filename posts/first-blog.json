{"slug":"first-blog","title":"My first personal blog","tags":["open source","frontend","css","JavaScript"],"excerpt":"My first non-trivial frontend project in one month","cover":"/warrior-girl-katana-fantasy-art-uhdpaper.com-4K-8.1473.jpg","html":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#disclaimer\">Disclaimer</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#motivation\">Motivation</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#technology-selection\">Technology Selection</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#markup-language\">Markup language</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#markdown\">Markdown</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#asciidoc\">Asciidoc</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#mdsvex\">MDsvex</a></li></ol></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#frontend-tech-stack\">Frontend tech stack</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#yewrust\">Yew(Rust)</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#svelte-and-sveltekit\">Svelte and SvelteKit</a></li></ol></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#css\">CSS</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#conclusion\">Conclusion</a></li></ol></nav>\n\n\n\n<h2 id=\"disclaimer\">Disclaimer<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#disclaimer\"><span class=\"heading-link\">🔗</span></a></h2>\n<p>This project is heavily inspired by <a href=\"https://fantinel.dev\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Matheus Fantinel’s blog</a>. I learned a lot about <a href=\"https://kit.svelte.dev/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">SvelteKit</a> and CSS by going through his source code. What’ more, I also copied two button components found on <a href=\"https://codepen.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">codepen</a>, the link to which can be found in the source code.</p>\n<h2 id=\"motivation\">Motivation<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#motivation\"><span class=\"heading-link\">🔗</span></a></h2>\n<p>Even before learning programming, I dreamed to have a website of my own, a place where I could enjoy my freedom of speech without heavy censorship. </p>\n<p>CMSs like WordPress used to be my only option. Now here we are, a fully responsive blog customized with all the fancy CSS effects and DOM manipulation I have just learned in the past month. On top of blogging itself, learning by doing is my methodology, so I need a target to keep myself reading documents and practicing frontend skills alternatively. </p>\n<h2 id=\"technology-selection\">Technology Selection<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#technology-selection\"><span class=\"heading-link\">🔗</span></a></h2>\n<h3 id=\"markup-language\">Markup language<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#markup-language\"><span class=\"heading-link\">🔗</span></a></h3>\n<p>The core of a blog is its posts. Vanilla HTML combined with some CSS is the most straightforward way to implement this, but at the cost of time and readability.</p>\n<h4 id=\"markdown\">Markdown<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#markdown\"><span class=\"heading-link\">🔗</span></a></h4>\n<p>Markdown is well known as a handy domain specific language for documentation. However, its simplicity is a double sword. When it comes to complicated documents like a book, Markdown is kind of overstretched.</p>\n<p>I envisioned that an ideal markup language for blog posts should have the following features:</p>\n<ul><li><strong>Support for mathematical expressions</strong>. I planned to take notes of the theoretical knowledge learned from textbooks and papers, like this: <div class=\"math math-display\"><!-- HTML_TAG_START --><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>i</mi><mi mathvariant=\"normal\">ℏ</mi><mfrac><mi mathvariant=\"normal\">∂</mi><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac><mi mathvariant=\"normal\">Ψ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">r</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>H</mi><mo>^</mo></mover><mi mathvariant=\"normal\">Ψ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">r</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">  i \\hbar \\frac{\\partial}{\\partial t}\\Psi(\\mathbf{r},t) = \\hat H \\Psi(\\mathbf{r},t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0574em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">ℏ</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">Ψ</span><span class=\"mopen\">(</span><span class=\"mord mathbf\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1968em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9468em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mord\">Ψ</span><span class=\"mopen\">(</span><span class=\"mord mathbf\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span><!-- HTML_TAG_END --></div></li>\n<li><strong>Progressively expressive</strong>. It should come with a few simple and useful core syntax rules like Markdown, and much more advanced features like collapsible blocks and table-of-contents(toc) left to be explored.\nAs you can see, the <a href=\"#disclaimer\">toc</a> at the beginning of this post is auto-generated.</li>\n<li><strong>Highly customizable</strong>. It would be great if I can enliven my posts with CSS and JavaScript. In fact, I can just insert a Svelte component right here: </li></ul>\n<p style=\"display: flex; justify-content: center; background: rgba(0,0,0,0.2)\"><div class=\"power-switch svelte-1wf7xse\"><input type=\"checkbox\" class=\"svelte-1wf7xse\" checked>\n\t<div class=\"button svelte-1wf7xse\"><svg class=\"power-off svelte-1wf7xse\"><use xlink:href=\"#line\" class=\"line svelte-1wf7xse\"></use><use xlink:href=\"#circle\" class=\"circle svelte-1wf7xse\"></use></svg>\n\t\t<svg class=\"power-on svelte-1wf7xse\"><use xlink:href=\"#line\" class=\"line svelte-1wf7xse\"></use><use xlink:href=\"#circle\" class=\"circle svelte-1wf7xse\"></use></svg></div></div>\n\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\"><symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 150 150\" id=\"line\"><line x1=\"75\" y1=\"34\" x2=\"75\" y2=\"58\"></line></symbol><symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 150 150\" id=\"circle\"><circle cx=\"75\" cy=\"80\" r=\"35\"></circle></symbol></svg>\n\n\n\n\n\n</p>\n<h4 id=\"asciidoc\">Asciidoc<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#asciidoc\"><span class=\"heading-link\">🔗</span></a></h4>\n<p>At first I tried Asciidoc, which almost meets my expectations. It supports <code>latexmath</code> and <code>asciimath</code>, and provides a myriad of advanced macros. Custom stylesheet can also be imported. It’s definitely powerful enough for someone who wants to write a book or something. </p>\n<p>Everything works fine locally until moving into the browser. Currently, the only implementation of Asciidoc—<a href=\"https://asciidoctor.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Asciidoctor</a> is written in Ruby, and Asciidoctor.js is transpiled from the Rudy version.\nTherefore, it’s not surprising that I met with some unresolved build-time <a href=\"https://github.com/asciidoctor/asciidoctor.js/issues/1587\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">issue</a>.\nI did find a workaround, that was to load the minified script from CDN at run time, at the cost of ~1s slow loading time.</p>\n<p>What’s worse is that Asciidoctor.js doesn’t support <code>latexmath</code> by default, not without <a href=\"https://www.mathjax.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">MathJax</a> configured. I just can’t get it work. Again I found another workaround—<a href=\"https://katex.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Katex</a>.\nAfter some debugging I discovered that Asciidoctor was just doing one simple thing:convert the input Asciidoc string to the output HTML string. The styling is decoupled from JS code and done by an external stylesheet. So does Katex. Therefore, I wrote some glue code to concatenate the string processing pipelines. Finally, I got an <a href=\"/tex\">Asciidoc renderer</a> with Latex support in browser!</p>\n<h4 id=\"mdsvex\">MDsvex<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#mdsvex\"><span class=\"heading-link\">🔗</span></a></h4>\n<p>Now Asciidoc works, but in a hacky way. In the meantime, I read about a markdown preprocessor called <a href=\"https://mdsvex.pngwn.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">MDsvex</a> from <a href=\"https://fantinel.dev/blog-development-sveltekit\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Matt Fantinel’ s post</a>, which turns Markdown files into ASTs(abstract syntax trees) and enables users to enhance Markdown with various plugins. </p>\n<p>First Asciidoc renderer and then Markdown ASTs, god I wish I knew more about compilers so that I can be a master of language manipulation. Had I got enough time and knowledge, I would love to write a Rust implementation of Asciidoc and even compile it to WebAssembly. </p>\n<p>I ended up choosing MDsvex to be one of the bedstones of my blog, by which this very post you are reading is generated.</p>\n<h3 id=\"frontend-tech-stack\">Frontend tech stack<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#frontend-tech-stack\"><span class=\"heading-link\">🔗</span></a></h3>\n<h4 id=\"yewrust\">Yew(Rust)<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#yewrust\"><span class=\"heading-link\">🔗</span></a></h4>\n<blockquote><p>The programming language that empowers everyone to become a systems programmer</p>\n<footer>Rust</footer></blockquote>\n<figure class=\"svelte-zoualc\"><img src=\"https://rustacean.net/more-crabby-things/dancing-ferris.gif\" alt=\"Unofficial Rust mascot: Dancing Ferris\" class=\"svelte-zoualc\">\n    <figcaption class=\"svelte-zoualc\">Unofficial Rust mascot: Dancing Ferris</figcaption>\n</figure>\n<p>For the record, <a href=\"https://www.rust-lang.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Rust</a> is my favorite programming language, and I proudly declare myself as a Rustacean. It’ s Java that introduced me into the world of algorithms and object-oriented programming, but it’s Rust that taught me more about low-level computer science. Rust is trying to accomplish safety, efficiency and ergonomics at the same time, which is really an eye-opener. I believe even if Rust somehow flops(unlikely) in the future, the spirit behind it will still persist. </p>\n<p>Back to the topic, at the beginning I picked <a href=\"https://yew.rs/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Yew</a>, a React-like Rust frontend framework to build my website, because I’d like to write everything in Rust exclusively. </p>\n<p>However, the frontend ecosystem in Rust is far from maturity and everything is more or less hacky. For example, WebAssembly, the compilation target of frontend Rust, can’t access any browser API without intermediary JavaScript. In addition, important features like CSS scoping and debugging with sourcemap are not supported.</p>\n<p>I wish I had the time and energy to reinvent frontend wheels in Rust but time is always limited. I had to switch to a JavaScript framework so that my blog would get online in a month. Nevertheless, Rust and WebAssembly are worth exploring, and I may develop some WebGL project with them in the future.</p>\n<h4 id=\"svelte-and-sveltekit\">Svelte and SvelteKit<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#svelte-and-sveltekit\"><span class=\"heading-link\">🔗</span></a></h4>\n<p>I have some experience with Vue, with which and <a href=\"https://d3js.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">D3.js</a> I used to build a data visualization tool. </p>\n<p>Vue is great, but I always tend to try something new. Many in the community are talking about a rising star, so I decided to give it a shot.</p>\n<p>Technically, Svelte is not a framework but a compiler. However, constructing components with Svelte feels natural and smooth, and there is less boilerplate code. The community, documentation and REPL are fantastic. I think every frontend developer should try it out. </p>\n<h3 id=\"css\">CSS<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#css\"><span class=\"heading-link\">🔗</span></a></h3>\n<p>For me, the hardest part of a blog project is not programming but styling. It took me almost a week to read articles about CSS and tweaking the layout to make my website fully responsive. The haunting horizontal scrollbar almost drove me crazy. I practiced using devtools heavily and learned the principle of mobile-first. </p>\n<h2 id=\"conclusion\">Conclusion<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#conclusion\"><span class=\"heading-link\">🔗</span></a></h2>\n<p>So that’s it, my first non-trivial project. It’s far from perfection but my goal here has been achieved. I have to move on to learn more about computer science. I’ m not satisfied with being an ordinary library user but aspire to be able to implement anything by myself if needed. I missed the old college days studying physics and mathematics, trying to break down the basic working principles of everything.</p>\n<p>Thanks for reading!</p>","css":{"code":".power-switch.svelte-1wf7xse.svelte-1wf7xse.svelte-1wf7xse{--color-invert:#ffffff;--width:75px;--height:75px;position:relative;display:flex;justify-content:center;align-items:center;width:var(--width);height:var(--height);z-index:130}.power-switch.svelte-1wf7xse .button.svelte-1wf7xse.svelte-1wf7xse{width:100%;height:100%;display:flex;justify-content:center;align-items:center;position:relative}.power-switch.svelte-1wf7xse .button.svelte-1wf7xse.svelte-1wf7xse:after{content:\"\";width:100%;height:100%;position:absolute;background:radial-gradient(circle closest-side, var(--color-invert), transparent);filter:blur(20px);opacity:0;transition:opacity 1s ease, transform 1s ease;transform:perspective(1px) translateZ(0);backface-visibility:hidden}.power-switch.svelte-1wf7xse .button .power-on.svelte-1wf7xse.svelte-1wf7xse,.power-switch.svelte-1wf7xse .button .power-off.svelte-1wf7xse.svelte-1wf7xse{height:100%;width:100%;position:absolute;z-index:1;fill:none;stroke:var(--color-invert);stroke-width:8px;stroke-linecap:round;stroke-linejoin:round}.power-switch.svelte-1wf7xse .button .power-on .line.svelte-1wf7xse.svelte-1wf7xse,.power-switch.svelte-1wf7xse .button .power-off .line.svelte-1wf7xse.svelte-1wf7xse{opacity:0.2}.power-switch.svelte-1wf7xse .button .power-on .circle.svelte-1wf7xse.svelte-1wf7xse,.power-switch.svelte-1wf7xse .button .power-off .circle.svelte-1wf7xse.svelte-1wf7xse{opacity:0.2;transform:rotate(-58deg);transform-origin:center 40px;stroke-dasharray:220;stroke-dashoffset:40}.power-switch.svelte-1wf7xse .button .power-on.svelte-1wf7xse.svelte-1wf7xse{filter:drop-shadow(0px 0px 6px rgba(255, 255, 255, 0.8))}.power-switch.svelte-1wf7xse .button .power-on .line.svelte-1wf7xse.svelte-1wf7xse{opacity:0;transition:opacity 0.3s ease 1s}.power-switch.svelte-1wf7xse .button .power-on .circle.svelte-1wf7xse.svelte-1wf7xse{opacity:1;stroke-dashoffset:220;transition:transform 0s ease, stroke-dashoffset 1s ease 0s}.power-switch.svelte-1wf7xse input.svelte-1wf7xse.svelte-1wf7xse{position:absolute;height:100%;width:100%;z-index:2;cursor:pointer;opacity:0}.power-switch.svelte-1wf7xse input.svelte-1wf7xse:checked+.button.svelte-1wf7xse:after{opacity:0.15;transform:scale(2) perspective(1px) translateZ(0);backface-visibility:hidden;transition:opacity 0.5s ease, transform 0.5s ease}.power-switch.svelte-1wf7xse input:checked+.button .power-on.svelte-1wf7xse.svelte-1wf7xse,.power-switch.svelte-1wf7xse input:checked+.button .power-off.svelte-1wf7xse.svelte-1wf7xse{animation:svelte-1wf7xse-click-animation 0.3s ease forwards;transform:scale(1)}.power-switch.svelte-1wf7xse input:checked+.button .power-on .line.svelte-1wf7xse.svelte-1wf7xse,.power-switch.svelte-1wf7xse input:checked+.button .power-off .line.svelte-1wf7xse.svelte-1wf7xse{animation:svelte-1wf7xse-line-animation 0.8s ease-in forwards}.power-switch.svelte-1wf7xse input:checked+.button .power-on .circle.svelte-1wf7xse.svelte-1wf7xse,.power-switch.svelte-1wf7xse input:checked+.button .power-off .circle.svelte-1wf7xse.svelte-1wf7xse{transform:rotate(302deg)}.power-switch.svelte-1wf7xse input:checked+.button .power-on .line.svelte-1wf7xse.svelte-1wf7xse{opacity:1;transition:opacity 0.05s ease-in 0.55s}.power-switch.svelte-1wf7xse input:checked+.button .power-on .circle.svelte-1wf7xse.svelte-1wf7xse{transform:rotate(302deg);stroke-dashoffset:40;transition:transform 0.4s ease 0.2s, stroke-dashoffset 0.4s ease 0.2s}@keyframes svelte-1wf7xse-line-animation{0%{transform:translateY(0)}10%{transform:translateY(10px)}40%{transform:translateY(-25px)}60%{transform:translateY(-25px)}85%{transform:translateY(10px)}100%{transform:translateY(0px)}}@keyframes svelte-1wf7xse-click-animation{0%{transform:scale(1)}50%{transform:scale(0.9)}100%{transform:scale(1)}}\nfigure.svelte-zoualc{display:flex;flex-flow:column}img.svelte-zoualc{max-width:100%;max-height:50vh;margin:auto;border-radius:10px;display:block}figcaption.svelte-zoualc{font:italic smaller \"Open Sans\", \"DejaVu Sans\", sans-serif;padding:3px;text-align:center}","map":null},"head":"","mtime":"2022-03-06","birthtime":"2022-02-23","count":5,"relatedPosts":[{"slug":"future","title":"Pre","tags":["open source","politics","ccp"],"hidden":false,"excerpt":"Just wanna fucjk","cover":"https://images.pexels.com/photos/3828245/pexels-photo-3828245.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500","html":null,"css":{"code":"","map":null},"head":"","mtime":"2022-03-01","birthtime":"2022-02-25","count":5,"relatedPosts":null,"readingTime":"⏳1 min read"},{"slug":"tesdt","title":"Lorem test","tags":["open source"],"excerpt":"Just wanna fucjk","cover":"https://i.ibb.co/6gFk6f3/girl-warrior-sword-fantasy-art-uhdpaper-com-4-K-8-3196.jpgW","html":null,"css":{"code":"","map":null},"head":"","mtime":"2022-03-01","birthtime":"2022-02-18","count":5,"relatedPosts":null,"readingTime":"⏳4 min read"},{"slug":"test","title":"Lorem test","tags":["open source"],"date":["2019-12-28T00:00:00.000Z"],"hidden":false,"excerpt":"Just wanna fucjk","cover":"https://images.pexels.com/photos/1906830/pexels-photo-1906830.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500","html":null,"css":{"code":"","map":null},"head":"","mtime":"2022-03-01","birthtime":"2022-02-17","count":5,"relatedPosts":null,"readingTime":"⏳3 min read"}],"readingTime":"⏳8 min read"}